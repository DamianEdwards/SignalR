@{
    ViewData["Title"] = "Home Page";
}

<html>
<head>
    <meta charset="utf-8">
    <meta content="stuff, to, help, search, engines, not" name="keywords">
    <meta content="What this page is about." name="description">
    <meta content="Display Webcam Stream" name="title">
    <title>Display Webcam Stream</title>

    <style>
        #container {
            margin: 0px auto;
            width: 520px;
            height: 395px;
            border: 10px #333 solid;
        }

        #video {
            width: 500px;
            height: 375px;
            background-color: #666;
        }
    </style>
</head>

<div id="container">
    <video id="video"></video>
    <canvas id="canvas" style="display:none;"></canvas>
</div>
<input type="text" id="capture-rate" value="1000" />
<button id="capture">Capture</button>

<img id="other-photo" />

<script src="~/lib/signalr-client/signalr-client.js"></script>

<script>
    (function () {

        var streaming = false,
            video = document.querySelector('#video'),
            canvas = document.querySelector('#canvas'),
            photo = document.querySelector('#photo'),
            capture = document.querySelector('#capture'),
            captureRate = document.querySelector('#capture-rate'),
            captureInterval = null,
            width = 500,
            height = 0;

        navigator.getMedia = (navigator.getUserMedia ||
            navigator.webkitGetUserMedia ||
            navigator.mozGetUserMedia ||
            navigator.msGetUserMedia);

        navigator.getMedia({
            video: true,
            audio: false
        },
            function (stream) {
                if (navigator.mozGetUserMedia) {
                    video.mozSrcObject = stream;
                } else {
                    var vendorURL = window.URL || window.webkitURL;
                    video.src = vendorURL.createObjectURL(stream);
                }
                video.play();
            },
            function (err) {
                console.log("An error occured! " + err);
            }
        );

        video.addEventListener('canplay', function (ev) {
            if (!streaming) {
                height = video.videoHeight / (video.videoWidth / width);
                video.setAttribute('width', width);
                video.setAttribute('height', height);
                canvas.setAttribute('width', width);
                canvas.setAttribute('height', height);
                streaming = true;
            }
        }, false);

        function captureAndSend() {
            canvas.style.display = "none";
            canvas.width = width;
            canvas.height = height;
            canvas.getContext('2d').drawImage(video, 0, 0, width, height);
            var png = canvas.toBlob(function (blob) {
                var reader = new FileReader();
                reader.onload = function (event) {
                    connection.send(reader.result);
                };
                reader.readAsArrayBuffer(blob);
            });
        }

        let url = `http://${document.location.host}/image`

        let connection = new signalR.Connection(url);

        connection.onDataReceived = data => {
            var img = document.getElementById('other-photo');
            img.setAttribute('src', URL.createObjectURL(data));
        };

        connection.start();

        capture.addEventListener('click', event => {
            if (captureInterval) {
                clearInterval(captureInterval);
                captureInterval = null;
                capture.innerHTML = 'Start Capturing';
            }
            else {
                var rate = captureRate ? parseInt(captureRate.value) : 1000;

                captureInterval = setInterval(() => {
                    captureAndSend();
                }, rate);

                capture.innerHTML = 'Stop Capturing';
            }

            event.preventDefault();
        });
    })();

</script>
</html>
