@{
    ViewData["Title"] = "Home Page";
}

<html>
<head>
    <meta charset="utf-8">
    <meta content="stuff, to, help, search, engines, not" name="keywords">
    <meta content="What this page is about." name="description">
    <meta content="Display Webcam Stream" name="title">
    <title>Display Webcam Stream</title>

    <style>
        #container {
            margin: 0px auto;
            width: 520px;
            height: 395px;
            border: 10px #333 solid;
        }

        #video {
            width: 500px;
            height: 375px;
            background-color: #666;
        }
    </style>
</head>

<div id="container">
    <video id="video"></video>
    <canvas id="canvas" style="display:none;"></canvas>
</div>
<div id="buttoncontent"></div>
<button id="startbutton">CAPTURE</button>

<form id="photo">
    <input type="submit" name="Send" value="Send" />
</form>

<ul id="photo-list"></ul>

<script src="~/lib/signalr-client/signalr-client.js"></script>

<script>
    (function () {

        var streaming = false,
            video = document.querySelector('#video'),
            canvas = document.querySelector('#canvas'),
            buttoncontent = document.querySelector('#buttoncontent'),
            photo = document.querySelector('#photo'),
            startbutton = document.querySelector('#startbutton'),
            width = 500,
            height = 0;

        navigator.getMedia = (navigator.getUserMedia ||
            navigator.webkitGetUserMedia ||
            navigator.mozGetUserMedia ||
            navigator.msGetUserMedia);

        navigator.getMedia({
            video: true,
            audio: false
        },
            function (stream) {
                if (navigator.mozGetUserMedia) {
                    video.mozSrcObject = stream;
                } else {
                    var vendorURL = window.URL || window.webkitURL;
                    video.src = vendorURL.createObjectURL(stream);
                }
                video.play();
            },
            function (err) {
                console.log("An error occured! " + err);
            }
        );

        video.addEventListener('canplay', function (ev) {
            if (!streaming) {
                height = video.videoHeight / (video.videoWidth / width);
                video.setAttribute('width', width);
                video.setAttribute('height', height);
                canvas.setAttribute('width', width);
                canvas.setAttribute('height', height);
                streaming = true;
            }
        }, false);

        function takepicture() {
            video.style.display = "none";
            canvas.style.display = "block";
            startbutton.innerText = "RETAKE";
            canvas.width = width;
            canvas.height = height;
            canvas.getContext('2d').drawImage(video, 0, 0, width, height);
            var data = canvas.toDataURL('image/png');
            photo.setAttribute('src', data);
        }

        startbutton.addEventListener('click', function (ev) {
            if (startbutton.innerText === "CAPTURE") {
                takepicture();
            }
            else {
                video.style.display = "block";
                canvas.style.display = "none";
                startbutton.innerText = "CAPTURE";
            }
            ev.preventDefault();
        }, false);

    })();

    let url = `http://${document.location.host}/image`

    let connection = new signalR.Connection(url);

    connection.onDataReceived = data => {
       let child = document.createElement('li');
       var objectUrl = URL.createObjectURL(data);
       var newCanvas = document.createElement('canvas');
       newCanvas.width = 500;
       newCanvas.height = 375;
       var ctx = newCanvas.getContext("2d");
       var imageData = ctx.createImageData(1000, 1000);
       var reader = new FileReader();
       reader.onload = function (event) {
           imageData.data.set(new Uint8ClampedArray(reader.result));
           ctx.putImageData(imageData, 0, 0);
           child.appendChild(newCanvas);
           document.getElementById('photo-list').appendChild(child);
       };
       reader.readAsArrayBuffer(data);
    };

    connection.start();

    document.getElementById('photo').addEventListener('submit', event => {
        var canvas = document.getElementById('canvas');
        var ctx = canvas.getContext('2d');
        var imageData = ctx.getImageData(0,0,1000,1000);
        var buffer = imageData.data.buffer;  // ArrayBuffer
        console.log(buffer);
        connection.send(buffer);
        event.preventDefault();
    });
</script>
</html>
